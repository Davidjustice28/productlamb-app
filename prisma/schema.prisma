// Prisma Schema.
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

// Disclaimer: This is a Stripe demo schema.
// It can be used in production, but you will have to adapt it to your own needs.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id    Int     @id @default(autoincrement())
  dateCreated DateTime
  subscriptionType String
  status String
  user_prisma_id String
  applications AccountApplication[]
}


model AccountApplication {
  id    Int     @id @default(autoincrement())
  name String
  summary String
  archived Boolean
  siteUrl String?
  type String
  account Account @relation(fields: [accountId], references: [id]) 
  accountId Int
  goals ApplicationGoal[]
  initiatives GeneratedInitiative[]
  integrations ApplicationIntegration[]
  codeRepositoryInfo ApplicationCodeRepositoryInfo[]
  sprints ApplicationSprint[]
  tasks GeneratedTask[]
  bugs ApplicationBug[]
  feedback ApplicationFeedback[]
}


model ApplicationGoal {
  id Int @id @default(autoincrement())
  goal String
  isLongTerm Boolean
  application AccountApplication @relation(fields: [applicationId], references: [id])
  applicationId Int
}

model ApplicationFeedback {
  id Int @id @default(autoincrement())
  application AccountApplication @relation(fields: [applicationId], references: [id])
  applicationId Int
  feedback String
  feedbackType String
  feedbackDateMs Int
  source String?
}
model GeneratedInitiative {
  id Int @id @default(autoincrement())
  description String
  application AccountApplication @relation(fields: [applicationId], references: [id])
  applicationId Int
  sprint ApplicationSprint @relation(fields: [sprintId], references: [id])
  sprintId Int @unique
}

model ApplicationIntegration {
  id Int @id @default(autoincrement())
  application AccountApplication @relation(fields: [applicationId], references: [id])
  applicationId Int
  name String
  secret String
  secretExpirationDateMs BigInt?
}

model ApplicationCodeRepositoryInfo {
  id Int @id @default(autoincrement())
  application AccountApplication @relation(fields: [applicationId], references: [id])
  applicationId Int
  platform String
  secret String
  secretExpirationDateMs BigInt?
  repositoryName String?
  repositoryId Int?
}

model GeneratedTask {
  id Int @id @default(autoincrement())
  application AccountApplication @relation(fields: [applicationId], references: [id])
  applicationId Int
  sprint ApplicationSprint @relation(fields: [sprintId], references: [id])
  sprintId Int
  title String
  summary String
  status String
  points Int
}


model ApplicationSprint {
  id Int @id @default(autoincrement())
  application AccountApplication @relation(fields: [applicationId], references: [id])
  applicationId Int
  startDate BigInt
  endDate BigInt
  completed Boolean
  generatedTasks GeneratedTask[]
  initiative GeneratedInitiative?
}

model ApplicationBug {
  id Int @id @default(autoincrement())
  application AccountApplication @relation(fields: [applicationId], references: [id])
  applicationId Int
  title String
  description String
  completed Boolean
  priority String
}